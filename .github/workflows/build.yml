---
name: build pandoc-thesis

"on":
  push:
    branches:
      - master
    paths:
      - apko/pandoc-thesis.Dockerfile
      - apko/pandoc-thesis.yaml

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  changes:
    name: filter changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      apko: ${{ steps.filter.outputs.apko }}
      docker: ${{ steps.filter.outputs.docker }}
    steps:
      - name: checkout project
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50
        id: filter
        with:
          filters: |
            apko:
              - 'apko/pandoc-thesis.yaml'
            docker:
              - 'apko/pandoc-thesis.Dockerfile'
  apko:
    name: build pandoc-thesis-apko
    needs: changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - name: checkout project
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      - name: setup qemu
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18
      - name: apko snapshot
        if: needs.changes.outputs.apko == 'true'
        uses: distroless/actions/apko-snapshot@main
        with:
          config: apko/pandoc-thesis.yaml
          base-tag: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          target-tag: master-apko
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          token: ${{ secrets.GITHUB_TOKEN }}
          archs: x86_64,aarch64
  docker:
    name: build pandoc-thesis
    if: |
      needs.changes.outputs.apko == 'true' || needs.changes.outputs.docker == 'true'
    needs:
      - changes
      - apko
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - name: checkout project
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      - name: check cosign version
        id: cosign-version
        run: |
          LATEST=$(curl -sL https://api.github.com/repos/sigstore/cosign/releases/latest | jq -r ".tag_name")
          echo "cosign version: ${LATEST}"
          echo "##[set-output name=latest;]${LATEST}"
      - name: check cosign cache
        uses: actions/cache@56461b9eb0f8438fd15c7a9968e3c9ebb18ceff1
        id: cosign-cache
        with:
          path: ~/.cosign
          key: ${{ runner.os }}-cosign-${{ steps.cosign-version.outputs.latest }}
      - name: add cosign to path
        if: steps.cosign-cache.outputs.cache-hit == 'true'
        run: |
          echo "HOME=$HOME" >> $GITHUB_ENV
          echo "PATH=$PATH:$HOME/.cosign" >> $GITHUB_ENV
      - name: install cosign
        if: steps.cosign-cache.outputs.cache-hit != 'true'
        uses: sigstore/cosign-installer@7cc35d7fdbe70d4278a0c96779081e6fac665f88
        with:
          cosign-release: ${{ steps.cosign-version.outputs.latest }}
      - name: verify apko base image
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign verify ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:master-apko | jq
      - name: setup qemu
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18
      - name: setup docker buildx
        uses: docker/setup-buildx-action@95cb08cb2672c73d4ffd2f422e6d11953d2a9c70
      - name: login ghcr.io
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: extract metadata
        id: meta
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: build-and-push pandoc-thesis
        uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94
        with:
          file: apko/pandoc-thesis.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
      - name: cosign pandoc-thesis
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:master
