---
name: build pandoc-thesis

"on":
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - apko/pandoc-thesis.yaml

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  apko:
    name: build pandoc-thesis
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      packages: write
      actions: read
    steps:
      - name: checkout project
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      - name: setup qemu
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18
      - name: apko snapshot
        id: apko
        uses: chainguard-images/actions/apko-snapshot@main
        with:
          config: apko/pandoc-thesis.yaml
          base-tag: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          target-tag: devel
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          token: ${{ secrets.GITHUB_TOKEN }}
          sbom-attest: true
          slsa-attest: true
      - name: smoke test
        run: |
          set -x
          OCI=${{ steps.apko.outputs.digest }} make container
          make example
      - name: prepare html assets
        run: |
          set -x
          mkdir html/
          mv example.pdf html/
      - name: publish to gh-pages
        uses: peaceiris/actions-gh-pages@373f7f263a76c20808c831209c920827a82a2847
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: html/
          keep_files: true
      - name: rumble docker config
        run: |
          set -x
          export DOCKER_CONFIG="${PWD}/.docker-rumble"
          mkdir -p "${DOCKER_CONFIG}"
          echo '{}' > "${DOCKER_CONFIG}/config.json"
          echo "${{ github.token }}" \
             | docker login -u "${{ github.repository_owner }}" --password-stdin "https://ghcr.io"
      - name: scan index trivy
        uses: chainguard-dev/rumble@main
        id: scan-index-trivy
        with:
          image: ${{ steps.apko.outputs.digest-index }}
          scanner: trivy
          docker-config: .docker-rumble
      - name: scan index grype
        uses: chainguard-dev/rumble@main
        id: scan-index-grype
        with:
          image: ${{ steps.apko.outputs.digest-index }}
          scanner: grype
          docker-config: .docker-rumble
      - name: scan amd64 trivy
        uses: chainguard-dev/rumble@main
        id: scan-amd64-trivy
        if: steps.apko.outputs.digest-amd64 != ''
        with:
          image: ${{ steps.apko.outputs.digest-amd64 }}
          scanner: trivy
          docker-config: .docker-rumble
      - name: scan amd64 grype
        uses: chainguard-dev/rumble@main
        id: scan-amd64-grype
        if: steps.apko.outputs.digest-amd64 != ''
        with:
          image: ${{ steps.apko.outputs.digest-amd64 }}
          scanner: grype
          docker-config: .docker-rumble
      - name: scan arm64 trivy
        uses: chainguard-dev/rumble@main
        id: scan-arm64-trivy
        if: steps.apko.outputs.digest-arm64 != ''
        with:
          image: ${{ steps.apko.outputs.digest-arm64 }}
          scanner: trivy
          docker-config: .docker-rumble
      - name: scan arm64 grype
        uses: chainguard-dev/rumble@main
        id: scan-arm64-grype
        if: steps.apko.outputs.digest-arm64 != ''
        with:
          image: ${{ steps.apko.outputs.digest-arm64 }}
          scanner: grype
          docker-config: .docker-rumble
      # tag latest only after tests and
      # after attach signature, vuln attestation
      - name: tag pandoc-thesis (latest)
        run: |
          crane tag "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:devel" latest
